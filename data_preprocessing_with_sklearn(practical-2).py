# -*- coding: utf-8 -*-
"""Data preprocessing with sklearn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1D08YEHhvhpQ79xSGdm3DPY3qe14c8JzK
"""

import numpy as np
import pandas as pd

from google.colab import files
upload = files.upload()

data = pd.read_csv('bmw.csv')
data.describe()

data.info

data.head(5)

x = data.iloc[:,[0,1,2,3,4,5,6,8]].values
y= data.iloc[:,-2].values

data.isnull().sum()

print(data.iloc[:10,:])

from sklearn.impute import SimpleImputer
imputer = SimpleImputer(missing_values=np.nan, strategy="mean")
imputer.fit(data.iloc[:,1:3])
data.iloc[:,1:3] = imputer.transform(data.iloc[:,1:3])
print(data.iloc[5,:])

print(x[:10,:])

print(y)

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

x[:,0] = le.fit_transform(x[:,0])
x[:,5] = le.fit_transform(x[:,5])

print(x[:5,:])

print(x[0])

data['transmission'].value_counts()

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder

ct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [3])], remainder='passthrough')
X = np.array(ct.fit_transform(x))

print(X[:10,:])

from sklearn.preprocessing import StandardScaler
scale = StandardScaler()

scaled_data = scale.fit_transform(X)

print(scaled_data[:5,:])